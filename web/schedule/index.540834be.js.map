{"mappings":"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","sources":["frontend/schedule/index.js"],"sourcesContent":["const CALENDAR_WEEKS = 4;\n\nconst tableElement = document.querySelector('#table');\nconst tbodyElement = document.querySelector('#tbody');\nconst scheduleSelect = document.querySelector('#schedule-select');\nconst dateSelect = document.querySelector('#date-select');\nconst calendarTable = document.querySelector('#calendar-table');\n\nlet schedules = {};\nlet currentSchedule = {};\n\ngetel('today').addEventListener('click', () => {\n\tdateSelect.value = date_to_string(current_date(), false);\n\tgetDate(dateSelect.value);\n});\n\ngetel('previous').addEventListener('click', () => {\n\tdateSelect.valueAsDate = new Date(dateSelect.valueAsDate.getTime() - 1000 * 60 * 60 * 24);\n\tgetDate(dateSelect.value);\n});\n\ngetel('next').addEventListener('click', () => {\n\tdateSelect.valueAsDate = new Date(dateSelect.valueAsDate.getTime() + 1000 * 60 * 60 * 24);\n\tgetDate(dateSelect.value);\n});\n\nasync function getDate(date = current_date(), setCurrent = false) {\n\tconst dateString = typeof date === 'string' ? date : date_to_string(date, false);\n\n\tconst day = await get(`/api/v1/on/${dateString}`);\n\tif (!day) {\n\t\treturn;\n\t}\n\n\tplace_boxes(day, typeof date === 'string' ? date_string_to_date(date, true) : date, true, setCurrent || dateString === date_to_string(current_date(), false));\n\n\tif (setCurrent) {\n\t\tcurrentSchedule = day;\n\t}\n\n\tfor (const option of scheduleSelect.querySelectorAll('option')) {\n\t\tif (option.textContent === day.friendly_name) {\n\t\t\toption.selected = true;\n\t\t}\n\t}\n}\n\nlet scheduleArray = [];\n\nfunction setScheduleValue(code) {\n\tscheduleSelect.innerHTML = '';\n\tfor (const schedule of scheduleArray.filter(x => !x.hide || code === x.code)) {\n\t\tconst option = document.createElement('option');\n\t\toption.value = schedule.code;\n\t\tif (code === schedule.code) {\n\t\t\toption.selected = true;\n\t\t}\n\n\t\tif (schedule.hide || schedule.periods.length === 0) {\n\t\t\toption.disabled = true;\n\t\t}\n\n\t\toption.innerHTML = schedule.friendly_name;\n\t\tscheduleSelect.append(option);\n\t}\n}\n\nasync function getSchedules() {\n\tconst today = await get('/api/v1/spec');\n\tif (!today) {\n\t\treturn;\n\t}\n\n\tschedules = today.schedule_types;\n\n\tscheduleSelect.innerHTML = '<option value=\"\" disabled selected>Select a Schedule</option>';\n\n\tscheduleArray = Object.keys(schedules).map(x => Object.assign({code: x}, schedules[x])).sort((a, b) => {\n\t\tif ((!a.hide && b.hide) || a.periods.length === 0) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif ((a.hide && !b.hide) || b.periods.length === 0) {\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn a.friendly_name.localeCompare(b.friendly_name);\n\t});\n\n\tconst currentScheduleCode = currentSchedule && scheduleArray.find(x => x.friendly_name === currentSchedule.friendly_name)?.code || null;\n\n\tsetScheduleValue(currentScheduleCode);\n}\n\nasync function getScheduleList(start, end) {\n\tconst scheduleList = await get(`/api/v1/schedule/from/${date_to_string(start, false)}/to/${date_to_string(end, false)}`);\n\tif (!schedules) {\n\t\treturn;\n\t}\n\n\tconst days = scheduleList.map((scheduleCode, i) => {\n\t\tconst date = new Date(start);\n\t\tdate.setDate(date.getDate() + i);\n\t\tlet schedule = schedules[scheduleCode] || null;\n\t\tif (!schedule) {\n\t\t\ttry {\n\t\t\t\tschedule = JSON.parse(scheduleCode);\n\t\t\t} catch {}\n\t\t}\n\n\t\tconst name = schedule?.friendly_name || null;\n\t\tconst backgroundColor = schedule?.color ? bytes_to_color(schedule.color) : '#FFFFFF';\n\t\tconst textColor = black_or_white(backgroundColor);\n\t\treturn {\n\t\t\tcode: scheduleCode,\n\t\t\tdata: schedule,\n\t\t\tname,\n\t\t\tdate,\n\t\t\tbackgroundColor,\n\t\t\ttextColor,\n\t\t};\n\t});\n\n\treturn days;\n}\n\nscheduleSelect.addEventListener('change', () => {\n\tconst selected = scheduleSelect.value;\n\tif (schedules[selected]) {\n\t\tplace_boxes(schedules[selected], current_date(), true, scheduleSelect.options[scheduleSelect.selectedIndex].text === currentSchedule.friendly_name);\n\t}\n});\n\ndateSelect.value = date_to_string(current_date(), false);\n\ndateSelect.addEventListener('change', () => {\n\tgetDate(dateSelect.value);\n});\n\nconst startOfWeek = current_date();\nstartOfWeek.setHours(0, 0, 0, 0);\nstartOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay());\nconst endOfNextWeek = new Date(startOfWeek);\nendOfNextWeek.setDate(endOfNextWeek.getDate() + CALENDAR_WEEKS * 7);\n\ndateSelect.min = date_to_string(startOfWeek, false);\ndateSelect.max = date_to_string(new Date(endOfNextWeek.getTime() - 60 * 60 * 24), false);\n\n(async () => {\n\tawait getDate(current_date(), true);\n\tawait getSchedules();\n\tconst scheduleList = await getScheduleList(startOfWeek, endOfNextWeek);\n\tcalendarTable.innerHTML = '';\n\tconst table = document.createElement('table');\n\tconst tbody = document.createElement('tbody');\n\n\tlet index = 0;\n\tfor (let row = 0; row < CALENDAR_WEEKS; row++) {\n\t\tconst tr = document.createElement('tr');\n\t\tfor (let col = 0; col < 7; col++) {\n\t\t\tconst td = document.createElement('td');\n\t\t\tconst day = scheduleList[index];\n\t\t\tconst humanDate = day.date.toLocaleDateString('en-US', {\n\t\t\t\tweekday: 'short',\n\t\t\t\tmonth: 'long',\n\t\t\t\tday: 'numeric',\n\t\t\t});\n\t\t\ttd.classList.add('day');\n\t\t\ttd.innerHTML = `<span class=\"day-name\">${humanDate}</span><div class=\"day-schedule\">${day.name}</div>`;\n\t\t\tif (day.date.toLocaleDateString() === current_date().toLocaleDateString()) {\n\t\t\t\ttd.classList.add('today');\n\t\t\t}\n\n\t\t\ttd.querySelector('.day-schedule').style.backgroundColor = day.backgroundColor;\n\t\t\ttd.querySelector('.day-schedule').style.color = day.textColor;\n\t\t\tif (day.data.periods.length === 0) {\n\t\t\t\ttd.classList.add('no-periods');\n\t\t\t} else {\n\t\t\t\ttd.addEventListener('click', () => {\n\t\t\t\t\tplace_boxes(day.data, day.date, true, day.date.toLocaleDateString() === current_date().toLocaleDateString());\n\t\t\t\t\tsetScheduleValue(day.code);\n\t\t\t\t\tdateSelect.value = date_to_string(day.date);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttr.append(td);\n\t\t\tindex++;\n\t\t}\n\n\t\ttbody.append(tr);\n\t}\n\n\ttable.append(tbody);\n\tcalendarTable.append(table);\n})();\n"],"names":["document","querySelector","$4c4597227ea83557$var$scheduleSelect","$4c4597227ea83557$var$dateSelect","$4c4597227ea83557$var$calendarTable","$4c4597227ea83557$var$schedules","$4c4597227ea83557$var$currentSchedule","async","$4c4597227ea83557$var$getDate","date","current_date","setCurrent","dateString","date_to_string","day","get","place_boxes","date_string_to_date","option","querySelectorAll","textContent","friendly_name","selected","getel","addEventListener","value","valueAsDate","Date","getTime","$4c4597227ea83557$var$scheduleArray","$4c4597227ea83557$var$setScheduleValue","code","innerHTML","schedule","filter","x","hide","createElement","periods","length","disabled","append","options","selectedIndex","text","$4c4597227ea83557$var$startOfWeek","setHours","setDate","getDate","getDay","$4c4597227ea83557$var$endOfNextWeek","$4c4597227ea83557$var$CALENDAR_WEEKS","min","max","ref","today","schedule_types","Object","keys","map","assign","sort","a","b","localeCompare","find","$4c4597227ea83557$var$getSchedules","scheduleList","start","end","scheduleCode","i","JSON","parse","name","backgroundColor","color","bytes_to_color","data","black_or_white","$4c4597227ea83557$var$getScheduleList","table","tbody","index","row","tr","col","td","humanDate","toLocaleDateString","weekday","month","classList","add","style","textColor"],"version":3,"file":"index.540834be.js.map"}