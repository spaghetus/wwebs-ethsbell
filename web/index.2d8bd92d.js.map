{"mappings":"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","sources":["frontend/index.js"],"sourcesContent":["let periodText;\nlet endTimeText;\nlet nextText;\nlet schedulenameElement;\n\nlet lastData;\n// Gets data from /today/now/near\n\nlet progressIntervals = [];\n\nfunction display(data) {\n\tif (!data) {\n\t\treturn;\n\t}\n\n\tfor (const interval of progressIntervals) {\n\t\tclearInterval(interval);\n\t}\n\n\tprogressIntervals = [];\n\n\tif (data[2] && (!data[1] || !data[1][0] || data[1][0].kind !== 'BeforeSchool')) {\n\t\tgetel('next_period').innerHTML = getel('next_period_template').innerHTML;\n\t\tput_period_to_element(getel('next_period'), data[2]);\n\t\tgetel('next_parent').style.display = 'block';\n\t} else {\n\t\tgetel('next_parent').style.display = 'none';\n\t}\n\n\tconst template = getel('current_period_time_template');\n\tconst parent = getel('current_parent');\n\tparent.innerHTML = '';\n\tif (data[1][0]) {\n\t\tif (lastData) {\n\t\t\tconst oldPeriods = lastData\n\t\t\t\t.flat()\n\t\t\t\t.filter(x => x)\n\t\t\t\t.map(x => x.friendly_name);\n\t\t\tconst nowPeriods = new Set(data[1].filter(x => x).map(x => x.friendly_name));\n\n\t\t\tif (oldPeriods.every(x => !nowPeriods.has(x))) {\n\t\t\t\tschedule();\n\t\t\t}\n\t\t}\n\n\t\tfor (const i of data[1]) {\n\t\t\tconst new_element = document.createElement('div');\n\t\t\tnew_element.innerHTML = template.innerHTML;\n\t\t\tconst didPutProgress = put_period_to_element(new_element, i);\n\t\t\tparent.append(new_element);\n\t\t\tif (didPutProgress) {\n\t\t\t\tconst size = Number.parseFloat(document.defaultView.getComputedStyle(new_element, null).fontSize.slice(0, -2));\n\t\t\t\tconst svg = new_element.querySelector('.progress-ring');\n\t\t\t\tsvg.setAttribute('width', size);\n\t\t\t\tsvg.setAttribute('height', size);\n\t\t\t\tconst circle = new_element.querySelector('.progress-ring__circle');\n\t\t\t\tconst border = new_element.querySelector('.progress-ring__border');\n\t\t\t\tcircle.setAttribute('cx', size / 2);\n\t\t\t\tcircle.setAttribute('cy', size / 2);\n\t\t\t\tcircle.setAttribute('r', size / 4 - 1);\n\t\t\t\tcircle.setAttribute('stroke-width', size / 2 - 2);\n\t\t\t\tborder.setAttribute('cx', size / 2);\n\t\t\t\tborder.setAttribute('cy', size / 2);\n\t\t\t\tborder.setAttribute('r', size / 2 - 2);\n\n\t\t\t\tprogressIntervals.push(\n\t\t\t\t\tsetInterval(() => {\n\t\t\t\t\t\tupdate_progress_circular(i, new_element);\n\t\t\t\t\t}, 1000),\n\t\t\t\t);\n\t\t\t\tupdate_progress_circular(i, new_element);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst new_element = document.createElement('div');\n\t\tnew_element.innerHTML = template.innerHTML;\n\t\tput_period_to_element(new_element, null);\n\t\tparent.append(new_element);\n\t}\n\n\tlastData = data;\n}\n\nwindow.addEventListener('resize', () => display(lastData));\n\nasync function schedule() {\n\tconst day = await get('/api/v1/today');\n\tif (!day) {\n\t\treturn;\n\t}\n\n\tsetColors(bytes_to_color(day.color));\n\n\tif (day.periods.length > 0) {\n\t\tschedulenameElement.innerHTML = `${day.friendly_name}`;\n\t\tschedulenameElement.style.display = 'inline-block';\n\t} else {\n\t\tschedulenameElement.innerHTML = '';\n\t\tschedulenameElement.style.display = 'none';\n\t}\n}\n\nfunction setColors(color) {\n\tif (!config.use_schedule_color) {\n\t\treturn;\n\t}\n\n\tcolor ??= getCookie('schedule_color');\n\tif (color) {\n\t\tsetCookie('schedule_color', color, new Date().setHours(24, 0, 0, 0));\n\t}\n\n\tdocument.body.style.setProperty('--background_color', color || config.background_color);\n\tdocument.body.style.setProperty('--background_text_color', color ? black_or_white(color) : config.background_text_color);\n}\n\nsetColors();\n\nwindow.addEventListener('load', () => {\n\tperiodText = document.querySelector('#period');\n\tendTimeText = document.querySelector('#end_time');\n\tnextText = document.querySelector('#next');\n\tschedulenameElement = document.querySelector('#schedulename');\n\n\tgo(display);\n\tschedule();\n});\n"],"names":["$3a52b41e31fb443b$var$periodText","$3a52b41e31fb443b$var$endTimeText","$3a52b41e31fb443b$var$nextText","$3a52b41e31fb443b$var$schedulenameElement","$3a52b41e31fb443b$var$lastData","$3a52b41e31fb443b$var$progressIntervals","$3a52b41e31fb443b$var$display","data","interval","clearInterval","kind","getel","style","display","innerHTML","put_period_to_element","template","parent","oldPeriods","flat","filter","x","map","friendly_name","nowPeriods","Set","every","has","$3a52b41e31fb443b$var$schedule","i","new_element","document","createElement","didPutProgress","append","size","Number","parseFloat","defaultView","getComputedStyle","fontSize","slice","svg","querySelector","setAttribute","circle","border","push","setInterval","update_progress_circular","new_element1","async","day","get","$3a52b41e31fb443b$var$setColors","bytes_to_color","color","periods","length","config","use_schedule_color","getCookie","setCookie","Date","setHours","body","setProperty","background_color","black_or_white","background_text_color","window","addEventListener","go"],"version":3,"file":"index.2d8bd92d.js.map"}