let e,t,a;function r(){t=$("select_schedule").value,$("select_schedule").innerHTML="";for(const t of Object.keys(e.schedule_types).sort(((t,a)=>e.schedule_types[t].friendly_name.localeCompare(e.schedule_types[a].friendly_name))))$("select_schedule").innerHTML+=`<option value="${t}">${e.schedule_types[t].friendly_name}</option>`;t||(t=$("select_schedule").value),$("select_schedule").value=t,$("add_period").disabled=!t,a=t&&e.schedule_types[t];for(const e of document.querySelectorAll(".schedule_setting"))e.disabled=!a;a?(d(),$("schedule_friendly_name").value=a.friendly_name,$("schedule_code").value=t,$("schedule_color").value=`#${a.color.map((e=>`0${e.toString(16)}`.slice(-2))).join("")}`,$("schedule_hide").checked=a.hide,$("schedule_regex").value=a.regex):$("periods").innerHTML="",$("calendars").value=e.calendar_urls.slice().reverse().join("\n")+"\n",$("calendars").setAttribute("rows",$("calendars").value.match(/\n/g).length+1),$("typical_schedule").innerHTML="";for(const[t,a]of["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"].entries()){const r=document.createElement("label");r.innerHTML=a,r.setAttribute("for",`typical_schedule_${t}`),$("typical_schedule").append(r);const n=document.createElement("select");n.innerHTML=$("select_schedule").innerHTML,n.value=e.typical_schedule[t],n.addEventListener("change",(()=>{e.typical_schedule[t]=n.value})),$("typical_schedule").append(n);const d=document.createElement("br");$("typical_schedule").append(d)}}$("pull").addEventListener("click",(async function(){if(e&&!confirm("This will overwrite any existing changes. Are you sure you want to continue?"))return;e=await(await fetch("../api/v1/spec")).json(),r()})),$("push").addEventListener("click",(async()=>{const t=await fetch("../api/v1/spec",{method:"POST",body:JSON.stringify(e),headers:{Authorization:Authorization}});t.ok?alert("Saved!"):alert(`Error: ${t.status} ${t.statusText}`)})),$("update").addEventListener("click",(async()=>{const e=await fetch("../api/v1/update",{method:"POST",headers:{Authorization:Authorization}});e.ok?alert("Saved!"):alert(`Error: ${e.status} ${e.statusText}`)})),$("select_schedule").addEventListener("change",(()=>{r()})),$("add_schedule").addEventListener("click",(()=>{const t=s(prompt("Set the internal name for the new schedule type (like no_school or orange_day)"));if(e.schedule_types[t])return alert("A schedule already exists with this code.");t&&(e.schedule_types[t]={friendly_name:"New Schedule",periods:[],regex:"",color:[255,255,255],hide:!1},r(),$("select_schedule").value=t,r())})),$("copy_schedule").addEventListener("click",(()=>{const a=s(prompt("Set the internal name for the newly copied schedule (like no_school or orange_day)"));if(e.schedule_types[a])return alert("A schedule already exists with this code.");a&&(e.schedule_types[a]=Object.assign({},e.schedule_types[t]),e.schedule_types[a].friendly_name=`Copy of ${t}`,r(),$("select_schedule").value=a,r())})),$("remove_schedule").addEventListener("click",(()=>{confirm(`Do you really want to delete ${t}?`)&&(delete e.schedule_types[t],$("select_schedule").value="",r())})),$("add_period").addEventListener("click",(()=>{a&&a.periods.push({friendly_name:"",start:"00:00:00",end:"00:00:00",kind:{Class:""}}),d()})),$("schedule_friendly_name").addEventListener("change",(e=>{if(e.target.value=e.target.value.trim(),!e.target.value)return alert("This value is required."),void r();a.friendly_name=e.target.value,r()})),$("schedule_code").addEventListener("change",(n=>{const d=s(n.target.value);if(n.target.value=d,!d)return alert("This value is required."),void r();if(d!==t){if(confirm("Changing the code of existing schedules can cause issues and is generally not recommended. Are you sure you want to change it?"))return e.schedule_types[d]?(alert("A schedule already exists with this code."),void r()):void(d?(e.schedule_types[d]=a,delete e.schedule_types[t],t=d,a=e.schedule_types[d],r(),$("select_schedule").value=d,r()):n.target.value=t);n.target.value=t}})),$("schedule_color").addEventListener("change",(e=>{a.color=e.target.value.slice(1).match(/.{2}/g).map((e=>Number.parseInt(e,16)))})),$("schedule_hide").addEventListener("change",(e=>{a.hide=e.target.checked})),$("schedule_regex").addEventListener("change",(e=>{try{new RegExp(e.target.value)}catch{return alert("Invalid regular expression."),void r()}a.regex=e.target.value})),$("calendars").addEventListener("change",(t=>{const a=t.target.value.split("\n").map((e=>e.trim())).filter((e=>e)).reverse();if(a.some((e=>{try{new URL(e);return!1}catch{return!0}})))return alert("Invalid calendar URL."),void r();e.calendar_urls=a,r()})),$("calendars").addEventListener("input",(e=>{$("calendars").setAttribute("rows",$("calendars").value.match(/\n/g).length+1)}));const n=$("period_settings");function d(){$("periods").innerHTML="",a.periods.forEach(((e,t,s)=>{const l=document.createElement("div");l.classList.add("period"),l.innerHTML=n.innerHTML;for(const e of l.querySelectorAll("[id]"))e.id+=`_${t}`;for(const e of l.querySelectorAll("[for]"))e.for+=`_${t}`;const i=e=>l.querySelector(`#${e}_${t}`);i("period_friendly_name").value=e.friendly_name,i("period_start").value=e.start,i("period_end").value=e.end,"string"==typeof e.kind?(i("period_kind").value=e.kind,i("period_class_index").disabled=!0):(i("period_kind").value="Class",i("period_class_index").disabled=!1,i("period_class_index").value=e.kind.Class),i("move_up").disabled=0===t,i("move_down").disabled=t===s.length-1,i("period_friendly_name").addEventListener("change",(t=>{if(t.target.value=t.target.value.trim(),!t.target.value)return alert("This value is required."),void r();e.friendly_name=t.target.value})),i("period_start").addEventListener("change",(t=>{if(t.target.value=t.target.value.trim(),!t.target.value)return alert("This value is required."),void r();/^\d{2}:\d{2}$/.test(t.target.value)&&(t.target.value+=":00"),e.start=t.target.value})),i("period_end").addEventListener("change",(t=>{if(t.target.value=t.target.value.trim(),!t.target.value)return alert("This value is required."),void r();/^\d{2}:\d{2}$/.test(t.target.value)&&(t.target.value+=":00"),e.end=t.target.value})),i("period_kind").addEventListener("change",(t=>{"Class"===t.target.value?(e.kind={Class:""},i("period_class_index").disabled=!1):(e.kind=t.target.value,i("period_class_index").value="",i("period_class_index").disabled=!0)})),i("period_class_index").addEventListener("change",(t=>{if(t.target.value=t.target.value.trim(),!t.target.value)return alert("This value is required."),void r();t.target.value!==e.kind.Class&&(!e.kind.Class||confirm("Changing the code of existing periods can cause issues and is generally not recommended. Are you sure you want to change it?")?e.kind={Class:t.target.value}:t.target.value=e.kind.Class)})),i("move_up").addEventListener("click",(()=>{[s[t],s[t-1]]=[s[t-1],s[t]],d()})),i("move_down").addEventListener("click",(()=>{[s[t],s[t+1]]=[s[t+1],s[t]],d()})),i("remove_period").addEventListener("click",(()=>{a.periods.splice(t,1),d()})),$("periods").append(l)}))}function s(e){return(e||"").toLowerCase().trim().replace(/\s/g,"_")}$("export").addEventListener("click",(()=>{const t=new Blob([JSON.stringify(e)],{type:"application/json"}),a=URL.createObjectURL(t),r=document.createElement("a");r.href=a,r.download="def.json",r.click(),URL.revokeObjectURL(a)})),$("import").addEventListener("change",(async t=>{const a=t.target.files[0];if(!a)return;const n=await a.text();try{const t=JSON.parse(n);e=t}catch{alert("Invalid file contents")}t.target.value="",r(),alert("Imported settings.")}));
//# sourceMappingURL=index.332c18d9.js.map
